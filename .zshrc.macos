export PATH="/opt/homebrew/bin:$PATH"

# [[ $TERM != "screen" ]] && exec tmux

# ZAP Config
[ -f "${XDG_DATA_HOME:-$HOME/.local/share}/zap/zap.zsh" ] && source "${XDG_DATA_HOME:-$HOME/.local/share}/zap/zap.zsh"
plug "zsh-users/zsh-autosuggestions"
plug "hlissner/zsh-autopair"
plug "zap-zsh/supercharge"
plug "zap-zsh/zap-prompt"
plug "zap-zsh/supercharge"
plug "zsh-users/zsh-syntax-highlighting"
plug "agkozak/zsh-z"
# plug "zsh-users/zsh-history-substring-search"
plug "Aloxaf/fzf-tab"

# Load and initialise completion system
autoload -Uz compinit
compinit

# Rust/Cargo
source "$HOME/.cargo/env"

# Nodejs (fnm)
export PATH="$HOME/.local/share/fnm:$PATH"
eval "`fnm env`"

# PyEnv
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

eval "$(pyenv virtualenv-init -)"

# bun
[ -s "$HOME/.bun/_bun" ] && source "$HOME/.bun/_bun"
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

# Youki
export PATH="$PATH:$HOME/softwares/youki"

#####################
#####################
#####################
#####################
#####################

## Custom config

export COLORTERM=truecolor
export EDITOR=nvim

## Custom aliases

alias ls='exa -lah --git --icons'
alias l='ls'
alias find='fd'
alias ack='ambr'
alias cat='batcat'

alias phpversionmanager='pvmp'
alias phpvm='pvm'
alias pvm='sudo update-alternatives --config php'

alias c='clear'
alias zshconfig='vim ~/.zshrc'
alias wslconfig='sudo vim /etc/wsl.conf'
alias rl='source ~/.zshrc'
# alias audio='rm -rf ~/.config/pulse;pulseaudio -k;pulseaudio -D;reboot'
alias tf='terraform'
alias vcc='rm -rf ./var/cache'
alias dev='cd ~/dev'
alias vim='nvim'
alias vimconfig='vim ~/.config/nvim'
alias hf='cat -p --no-pager ~/.zsh_history | fzf'
alias python='python3'
alias docker-compose='docker compose'
alias gs='git switch'
alias gitconfig='vim ~/.gitconfig'
alias gitignore='vim ~/.gitignore'
alias gph='git push -u origin HEAD'
alias gsm='gcm'
alias gsd='git switch dev'
alias gpl='git pull'
alias open='explorer.exe'



##### macos stuff


export PATH="/usr/local/opt/elasticsearch@6/bin:$PATH"
export PATH="/usr/local/opt/php@7.4/bin:$PATH"
export PATH="/usr/local/opt/php@7.4/sbin:$PATH"
export PATH="$HOME/composer/vendor/bin:$PATH"
export PATH="$DENO_INSTALL/bin:$PATH"
export PATH="$PATH:$HOME/.spicetify"
export PATH="/opt/homebrew/bin:$PATH"
export PATH="$PATH:/usr/local/go"
export PATH="$PATH:/usr/local/go/bin"
export PATH="$PATH:$HOME/.pyenv/bin"
export PATH="$PATH:$HOME/.local/bin"

export DENO_INSTALL="$HOME/.deno"
export COMPOSER_HOME="$HOME/composer"

export STAFFMATCH_CORE="$HOME/dev/staffmatch-core"
export STAFFMATCH_CORE_CONSOLE="$STAFFMATCH_CORE/bin/console"

alias gs="git switch"
alias gsd="git switch development"
alias vcc="rm -rf ./var/cache"
alias gpl="git pull"
alias watcher="cd ~/dev/staffmatch-watcher; activemq purge; npm run start"
alias csp="rm -rf ~/dev/copy-staffmatch-core; cp -r $STAFFMATCH_CORE ~/dev/copy-staffmatch-core"
alias dev="cd $STAFFMATCH_CORE; clear"
# alias ss="$STAFFMATCH_CORE_CONSOLE d:s:u --force --env=dev"
alias rl="source ~/.zshrc"
alias zshconfig="vim ~/.zshrc"
alias nginxconfig="vim /opt/homebrew/etc/nginx/sites-enabled/staffmatch-core.conf"
alias c="clear"
alias vd="vim $STAFFMATCH_CORE"
alias vim='nvim'
alias bc="$STAFFMATCH_CORE_CONSOLE"
alias bcd="$STAFFMATCH_CORE_CONSOLE --env=dev"
alias bct="$STAFFMATCH_CORE_CONSOLE --env=test"
alias gph="git push -u origin HEAD"
alias gsp="git stash pop"
alias redis="redis-cli"
alias bb="$STAFFMATCH_CORE/bin/behat -vvv"
alias b="$STAFFMATCH_CORE/bin"
alias dccm="bct doctrine:cache:clear-metadata;bcd doctrine:cache:clear-metadata" 
alias dsu="dccm;bcd d:s:u --force --dump-sql"
alias dst="dccm;bct d:s:u --force"
alias ds="dsu --dump-sql;dst --dump-sql;"
alias dstt="dst --dump-sql"
alias assets="bcd assets:install --symlink --relative"
alias gsl="gsth list"
alias gsth="git stash"
alias rt="rm -f /tmp/staffmatch_test.sql; rm -f /tmp/idsArray.csv"
alias rsp="rt;vcc"
alias tf="rsp;dst;bb $@ -vvv"
alias brewrs="brew services restart $@"
alias gsm="gcm"
alias services="brew services"
alias restore="mv $STAFFMATCH_CORE ~/dev/.old/staffmatch-core; mv ~/dev/copy-staffmatch-core $STAFFMATCH_CORE"
alias gedit="vim ~/.gitignore"
alias rdb="bcd d:d:d --force --if-exists;bcd d:d:c; loab; dsu"
alias rtdb="rt;bct d:d:d --force --if-exists;bct d:d:c; dst"
alias vendor="rm -rf vendor; composer install"
alias vimconfig="vim ~/.config/nvim"
alias perso="cd ~/dev/perso;c"
alias gitconfig="vim ~/.gitconfig"
alias gitignore="vim ~/.gitignore"
alias hxf='hx $(fzf)'
alias hf="history | fzf"
alias es="bcd staffmatch:es:update --env=dev"
alias phpunit="bin/phpunit $@ -vvv"
alias phpconfig="vim $(php-config --ini-path)/php.ini"
alias pub="dart pub"
alias pip="python -m pip"
alias python3="python"
alias notes="code $HOME/Documents/notes"
alias clearlog="echo '' > $STAFFMATCH_CORE/var/logs/dev.log"
alias jcurl='curl $@ | jq'
alias logs='tail -f var/logs/dev.log | grep "app\."'
alias phpstan='bin/phpstan'
alias phpd='php -d zend_extension="xdebug.so" -d xdebug.mode=debug -d xdebug.start_with_request=1 -d xdebug.client_host=localhost -d xdebug.client_port=9003 -d xdebug.idekey='

alias ls='exa'
alias exa='exa -lah --icons --git'
alias find='fd'
alias grep='rg'
alias ack='ambr'

phpdebug() {
    if [ -f /opt/homebrew/etc/php/7.4/conf.d/ext-xdebug.ini ]; then
        echo -e "Disabled debug mode"
        mv /opt/homebrew/etc/php/7.4/conf.d/ext-xdebug.ini "$STAFFMATCH_CORE"/.ignored/xdebug.ini
    else
        echo -e "Enabled debug mode"
        mv "$STAFFMATCH_CORE"/.ignored/xdebug.ini /opt/homebrew/etc/php/7.4/conf.d/ext-xdebug.ini
    fi
}

# db dumping stuff
function dump() {
    mysqldump staffmatch -u root -pPASSWORD > "$STAFFMATCH_CORE/.ignored/dumps/$1.sql"
}
function load() {
    mysql -u root staffmatch -pPASSWORD < "$STAFFMATCH_CORE/.ignored/dumps/$1.sql"
}

function dump-test() {
    mysqldump staffmatch_test -u root -pPASSWORD > "$STAFFMATCH_CORE/.ignored/dumps/$1.test.sql"
}
function load-test() {
    mysql -u root staffmatch_test -pPASSWORD < "$STAFFMATCH_CORE/.ignored/dumps/$1.test.sql"
}

function dumptest() {
    mysqldump staffmatch_test -u root -pPASSWORD > "$STAFFMATCH_CORE/.ignored/dumps/$1.test.sql"
}
function loadtest() {
    mysql -u root staffmatch_test -pPASSWORD < "$STAFFMATCH_CORE/.ignored/dumps/$1.test.sql"
}

function bak() {
    cp $1 $1.bak
}

function usephp() {
    if ! command -v php;then
        brew link php@$1
    else
        CURRENT_PHP_VERSION=$(php -r "echo PHP_MAJOR_VERSION . '.' . PHP_MINOR_VERSION;")
        brew unlink php@$CURRENT_PHP_VERSION && brew link --overwrite --force php@$1
    fi
}

alias admin="cd ~/dev/staffmatch-admin;git pull;echo "n" | npm run start"
alias front="cd ~/dev/staffmatch-front/app;git pull; npm run start" #&> ~/dev/staffmatch-front/front.log"
alias oc="cd ~/oc"
alias sm-services-start="services start php@7.4;services start mysql@5.7;services start activemq;services start elasticsearch@6;services start redis;services start nginx;"
alias sm-services-stop="services stop php@7.4;services stop mysql@5.7;services stop activemq;services stop elasticsearch@6;services stop redis;services stop nginx;"
alias openvpn='sudo /usr/local/opt/openvpn/sbin/openvpn'
alias ddd='bcd d:d:d --force --if-exists'
alias dddt='bct d:d:d --force --if-exists'
alias ddc='bcd d:d:c --if-not-exists'
alias ddct='bct d:d:c --if-not-exists'
alias cat='bat'
alias brwe='brew'
alias berw='brew'
alias brwe='brew'

export AWS_DEFAULT_REGION=eu-west-3
