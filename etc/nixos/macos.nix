# Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).

{ modulesPath, config, pkgs, lib, ... }:

with lib;

{
  imports =
    [ # Include the default lxd configuration.
      "${modulesPath}/virtualisation/lxc-container.nix"
      # Include the container-specific autogenerated configuration.
      /etc/nixos/lxd.nix
      /home/YZiadi/.dotfiles/etc/nixos/packages.nix
    ];

  programs.nix-ld.enable = true;

  networking.useDHCP = false;
  networking.interfaces.eth0.useDHCP = true;

  i18n.defaultLocale = "en_US.UTF-8";

  # users.users.alice = {
  #   isNormalUser = true;
  #   extraGroups = [ "wheel" ]; # Enable ‘sudo’ for the user.
  # };

  # Some programs need SUID wrappers, can be configured further or are
  # started in user sessions.
  # programs.mtr.enable = true;
  # programs.gnupg.agent = {
  #   enable = true;
  #   enableSSHSupport = true;
  # };



  # This value determines the NixOS release from which the default
  # settings for stateful data, like file locations and database versions
  # on your system were taken. It‘s perfectly fine and recommended to leave
  # this value at the release version of the first install of this system.
  # Before changing this value read the documentation for this option
  # (e.g. man configuration.nix or on https://nixos.org/nixos/options.html).
  system.stateVersion = "21.05"; # Did you read the comment?

  # As this is intended as a stadalone image, undo some of the minimal profile stuff
  documentation.enable = true;
  documentation.nixos.enable = true;
  environment.noXlibs = false;

  # ---- orbstack.nix (modified) ----
  security.sudo.extraRules= [
    { users = [ "YZiadi" ];
      commands = [
        { command = "ALL";
          options= [ "NOPASSWD" ];
        }
      ];
    }
  ];

  # add OrbStack CLI tools to PATH
  # environment.shellInit = ''
  #   . /opt/orbstack-guest/etc/profile-early
  #
  #   # add your customizations here
  #
  #   . /opt/orbstack-guest/etc/profile-late
  # '';

  # timezone
  time.timeZone = "Europe/Paris";

  # resolv.conf: NixOS doesn't use systemd-resolved

  # faster DHCP - OrbStack uses SLAAC exclusively
  networking.dhcpcd.extraConfig = ''
    noarp
    noipv6
  '';

  # disable sshd
  services.openssh.enable = false;

  # systemd
  systemd.services."systemd-oomd".serviceConfig.WatchdogSec = 0;
  systemd.services."systemd-userdbd".serviceConfig.WatchdogSec = 0;
  systemd.services."systemd-udevd".serviceConfig.WatchdogSec = 0;
  systemd.services."systemd-timesyncd".serviceConfig.WatchdogSec = 0;
  systemd.services."systemd-timedated".serviceConfig.WatchdogSec = 0;
  systemd.services."systemd-portabled".serviceConfig.WatchdogSec = 0;
  systemd.services."systemd-nspawn@".serviceConfig.WatchdogSec = 0;
  systemd.services."systemd-machined".serviceConfig.WatchdogSec = 0;
  systemd.services."systemd-localed".serviceConfig.WatchdogSec = 0;
  systemd.services."systemd-logind".serviceConfig.WatchdogSec = 0;
  systemd.services."systemd-journald@".serviceConfig.WatchdogSec = 0;
  systemd.services."systemd-journald".serviceConfig.WatchdogSec = 0;
  systemd.services."systemd-journal-remote".serviceConfig.WatchdogSec = 0;
  systemd.services."systemd-journal-upload".serviceConfig.WatchdogSec = 0;
  systemd.services."systemd-importd".serviceConfig.WatchdogSec = 0;
  systemd.services."systemd-hostnamed".serviceConfig.WatchdogSec = 0;
  systemd.services."systemd-homed".serviceConfig.WatchdogSec = 0;

  # ssh config
  programs.ssh.extraConfig = ''
    Include /opt/orbstack-guest/etc/ssh_config
  '';

  # extra certificates
  security.pki.certificates = [
    ''
-----BEGIN CERTIFICATE-----
MIIDvDCCAqSgAwIBAgIEFOePRDANBgkqhkiG9w0BAQsFADA/MT0wOwYDVQQDEzRT
dGFmZm1hdGNoIEZyYW5jZSBKU1MgQnVpbHQtaW4gQ2VydGlmaWNhdGUgQXV0aG9y
aXR5MB4XDTE5MDkwNTE1MTAyMFoXDTI5MDkwNzE1MTAyMFowPzE9MDsGA1UEAxM0
U3RhZmZtYXRjaCBGcmFuY2UgSlNTIEJ1aWx0LWluIENlcnRpZmljYXRlIEF1dGhv
cml0eTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIevOj1PM5hYDCIe
gKwh4iZ5oTK5PZkEM8Fitej3NC6IHK+Kelsy+ApqK7sRGpo02gMH0bO17UnfAya4
6bRywJMa6YYpiY2hnzprltG4FOVOHuRMcJd3rSr2AGlSVrwuj/WHvxLMpyiG7P0K
mbtSvyCx8mDLwgAM/ax2aCa6XWGDobBiNWpHq4O395uehVihfMWs2EvQ4Jho6PM7
+jeR4zacWetXj8FEuu+7KgnZoUdJtVU2Mw333h7AnEX3GwZDKma3oMPjFiq9hN5Q
zrPobv3tsU60wVAkqHkRgr3TMPxo3h53bRtI6/gdlIBtKSEco+hsbBrrV2O7JY5n
A82jp6sCAwEAAaOBvzCBvDAdBgNVHQ4EFgQUYdhmgB/1oL5GHYyzT5XRJ5bborAw
EwYDVR0lBAwwCgYIKwYBBQUHAwEwDgYDVR0PAQH/BAQDAgGmMA8GA1UdEwEB/wQF
MAMBAf8wRAYDVR0fBD0wOzA5oDegNYYzaHR0cHM6Ly9zdGFmZm1hdGNoLmphbWZj
bG91ZC5jb20vL0NBL0pBTUZDUkxTZXJ2bGV0MB8GA1UdIwQYMBaAFGHYZoAf9aC+
Rh2Ms0+V0SeW26KwMA0GCSqGSIb3DQEBCwUAA4IBAQBxQn2NIvZwOiE7tBfAWvVZ
ZCPh9DerqgGLleGyJ0L5qqorq4D3V05gzJVUwzADsh/f4QSnt/jwE6ztQUT6qAUt
wc3O0yZiP6jqm2PaPBim43nQWs9Gm5rs5c+5l2FgxtjIkM/CoZk4jzPXfavVWBhV
1vtIyZsGNgdCr5hOD9YeO64t5i/nzFD/UvsNwoZ3Prc1VzHeKcYybhlsrol37Jwd
uBffXPuGZsD0TvxDTmMc/cdfwn2wyBaxxPVUtVLDwSzbnu1+MJAt01s+GmKTFXRL
bC1Y3Eqdv0EgPTeob4RGKJ5XXiXoO/Q9KxDzkUF2UMhEeuRLlNiKHP27LDJIn+0s
-----END CERTIFICATE-----

    ''
  ];

  # indicate builder support for emulated architectures
  nix = {
    extraOptions = "extra-platforms = x86_64-linux i686-linux";
    settings.experimental-features = [ "nix-command" "flakes" ];
  };

}
